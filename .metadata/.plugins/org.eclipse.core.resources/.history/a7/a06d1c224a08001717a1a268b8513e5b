package usuario;

import dados.Livro;

import java.sql.Array;
import java.util.ArrayList;
import java.util.GregorianCalendar;

import cadastro.CadLivros;
import utilitarios.Console;


public class Usuario {
	private static int opcao;
	private static Console console = new Console();
	private static Livro livro;
	static int contador = 0;
	public static void main(String[] args) {
		
		while (contador < 5){
			menu();
			opcao = console.readInt("Qual opção você deseja?: ");
			
			switch (opcao){
				case 1:
					livro = pegarDadosLivro();
					CadLivros.adicionarlivro(livro);
					break;
				case 2:
				case 3:
					excluirLivro();
					break;
				case 4:
					consultarPorCodigo();
					break;
				case 5:
					consultarPorTitulo();
					break;
			}
		}
	}
	
	private static void menu (){
		System.out.println("Menu:");
		System.out.println("1) Cadastrar novo livro");
		System.out.println("2) Alterar algum livro");
		System.out.println("3) Excluir algum livro");
		System.out.println("4) Consultar livro pelo código");
		System.out.println("5) Consultar livro pelo título");
	}
	
	private static void dadosLivro (Livro livro){
		System.out.println("Código..........: "+ livro.getCodigo());
		System.out.println("Título..........:"+ livro.getTitulo());
		System.out.print("Autor(es).......: "); // talvez teremos que fazer um for
		for (String autor: livro.getAutor()){
			System.out.print("\t"+autor+"\n");
		}
		System.out.println("Data............: "+livro.getData().getTime());
	
	}
	
	private static Livro pegarDadosLivro (){
		int codigo;
		String titulo;
		ArrayList<String> autor = new ArrayList<String>();
		GregorianCalendar data 	= new GregorianCalendar();
		Livro livro;
		do {
			codigo = console.readInt("Digite o código do livro: ");
			if (codigo <= 0){
				System.out.println("Código inválido, deve ser positivo e maior que zero!");
				
			}
		}while(codigo <= 0);
		
		do {
			titulo = console.readLine("Digite o título do livro: ");
			
			if (titulo.length() == 0){
				System.out.println("Título inválido, não deve ser deixado em branco!");
			}
		}while(titulo.length() == 0);
		
		do {
			// ver logica para permitir mais de um autor
			autor.add(console.readLine("Digite o nome do autor: "));
			
			if (autor.size() == 0){
				System.out.println("Nome inválido, não deve ser deixado em branco!");
			}
		}while(autor.size() == 0);
		
		livro = new Livro(codigo, titulo, autor, data);
		
		return livro;
	}
	
	private static void exluirLivro (){
		Livro livro = pegarDadosLivro();
		CadLivros.excluirLivro(livro);
	}
	
	private static void consultarPorCodigo (){
		int codigo = console.readInt("Digite o código para busca: ");
		Livro livro = CadLivros.consultaPorCodigo(codigo);
		dadosLivro(livro);
	}
	
	private static void consultarPorTitulo (){
		String titulo = console.readLine("Digite o título do livro: ");
		ArrayList<Livro> livros = new ArrayList<Livro>();
		livros = CadLivros.consultaPorNome(titulo);
		dadosLivro(livro);
	}

	
}

/* Método main para apresentar o menu principal e antes de sair 
 * do programa imprimir mensagem de finalização.
	Métodos estáticos e privados para apresentar um menu com opções para métodos: 
	cadastrar um novo livro, alterar livro, excluir um livro, consultar o livro pelo código, 
	consultar o livro pelo nome (titulo).
*/